- name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled"
  sysctl:
      name: net.ipv4.ip_forward
      value: 0
      state: present
      reload: yes
      ignoreerrors: yes
  when: ubuntu1604cis_is_router == false
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.1

- name: "SCORED | 3.1.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  when: ubuntu1604cis_is_router == false
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.2

- name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.1

- name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.2

- name: "SCORED | 3.2.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.3

- name: "SCORED | 3.2.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.4

- name: "SCORED | 3.2.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.5

- name: "SCORED | 3.2.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.6

- name: "SCORED | 3.2.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.7

- name: "SCORED | 3.2.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.8

- name: "SCORED | 3.3.1 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  when: ubuntu1604cis_ipv6_required == true
  notify:
      - sysctl flush ipv6 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.3.1

- name: "SCORED | 3.3.2 | PATCH | Ensure IPv6 redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
  when: ubuntu1604cis_ipv6_required == true
  notify:
      - sysctl flush ipv6 route table
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.3.2

- name: "NOTSCORED | 3.3.3 | PATCH | Ensure IPv6 is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?options ipv6 disable="
      line: "options ipv6 disable=1"
      create: yes
  when: ubuntu1604cis_ipv6_required == false
  tags:
      - level1
      - patch
      - rule_3.3.3

- name: "SCORED | 3.4.1 | PATCH | Ensure TCP Wrappers is installed"
  apt:
    name: "{{ tcp_wrapper_package[ansible_os_family] }}"
    state: present
    install_recommends: no
  tags:
      - level1
      - patch
      - rule_3.4.1

- name: "SCORED | 3.4.2 | PATCH | Ensure /etc/hosts.allow is configured"
  template:
      src: hosts.allow.j2
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.2

- name: "SCORED | 3.4.3 | PATCH | Ensure /etc/hosts.deny is configured"
  lineinfile:
      dest: /etc/hosts.deny
      regexp: "^(#)?ALL"
      line: "ALL: ALL"
  tags:
      - level1
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.4 | PATCH | Ensure permissions on /etc/hosts.allow are configured"
  file:
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.4

- name: "SCORED | 3.4.5 | PATCH | Ensure permissions on /etc/hosts.deny are 644"
  file:
      dest: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.5

- name: "NOTSCORED | 3.5.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install dccp(\\s|$)"
      line: "install dccp /bin/true"
      create: yes
  tags:
      - level1
      - patch
      - rule_3.5.1

- name: "NOTSCORED | 3.5.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install sctp(\\s|$)"
      line: "install sctp /bin/true"
      create: yes
  tags:
      - level1
      - patch
      - rule_3.5.2

- name: "NOTSCORED | 3.5.3 | PATCH | Ensure RDS is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install rds(\\s|$)"
      line: "install rds /bin/true"
      create: yes
  tags:
      - level1
      - patch
      - rule_3.5.3

- name: "NOTSCORED | 3.5.4 | PATCH | Ensure TIPC is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install tipc(\\s|$)"
      line: "install tipc /bin/true"
      create: yes
  tags:
      - level1
      - patch
      - rule_3.5.4

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  apt:
      name: firewalld
      state: present
      install_recommends: no
  when: ubuntu1604cis_firewall == "firewalld" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  service:
      name: firewalld
      state: started
      enabled: yes
  when: ubuntu1604cis_firewall == "firewalld" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6

- name: "SCORED | 3.6.1 | PATCH | Ensure iptables is installed"
  apt:
      name: iptables
      state: present
      install_recommends: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.1

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  lineinfile:
      dest: /etc/firewalld/firewalld.conf
      regexp: "^DefaultZone"
      line: "DefaultZone=drop"
  when: ubuntu1604cis_firewall == "firewalld" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  firewalld:
      state: enabled
      zone: drop
      permanent: true
  when: ubuntu1604cis_firewall == "firewalld" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  # Set the policy for the INPUT chain to DROP
  iptables:
    chain: INPUT
    policy: DROP
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  # Set the policy for the OUTPUT chain to DROP
  iptables:
    chain: OUTPUT
    policy: DROP
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  # Set the policy for the FORWARD chain to DROP
  iptables:
    chain: FORWARD
    policy: DROP
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.2

- name: "SCORED | 3.6.3 | PATCH | Ensure loopback traffic is configured"
  iptables:
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.3

- name: "SCORED | 3.6.3 | PATCH | Ensure loopback traffic is configured"
  iptables:
    chain: OUTPUT
    out_interface: lo
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.3

- name: "SCORED | 3.6.3 | PATCH | Ensure loopback traffic is configured"
  iptables:
    chain: INPUT
    source: 127.0.0.0/8
    jump: DROP
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.3

- name: "SCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  iptables:
    chain: OUTPUT
    protocol: tcp
    match: state
    state: NEW,ESTABLISHED
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.4

- name: "SCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  iptables:
    chain: OUTPUT
    protocol: udp
    match: state
    state: NEW,ESTABLISHED
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.4

- name: "SCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  iptables:
    chain: OUTPUT
    protocol: icmp
    match: state
    state: NEW,ESTABLISHED
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.4

- name: "SCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  iptables:
    chain: OUTPUT
    protocol: tcp
    match: state
    state: ESTABLISHED
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.4

- name: "SCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  iptables:
    chain: OUTPUT
    protocol: udp
    match: state
    state: ESTABLISHED
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.4

- name: "SCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
  iptables:
    chain: OUTPUT
    protocol: icmp
    match: state
    state: ESTABLISHED
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.4

- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
  firewalld:
      service: "{{ item }}"
      state: enabled
      zone: drop
      permanent: true
      immediate: true
  when: ubuntu1604cis_firewall == "firewalld" and ubuntu1604cis_setup_firewall
  notify: restart firewalld
  with_items: "{{ ubuntu1604cis_firewall_services }}"
  tags:
      - level1
      - patch
      - rule_3.6.5

- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    match: state
    state: NEW
    jump: ACCEPT
  changed_when: no
  when: ubuntu1604cis_firewall == "iptables" and ubuntu1604cis_setup_firewall
  tags:
      - level1
      - patch
      - rule_3.6.5
      - notimplemented

- name: "NOTSCORED | 3.7 | PATCH | Ensure wireless interfaces are disabled"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_3.7

- name: 3.0 Check for /boot/grub/grub.cfg file (Not Scored)
  stat: path=/boot/grub/grub.cfg
  register: grub_cfg_file
  tags:
    - section3

- name: 3.3.1.1 Set Boot Loader Superuser (check) (Scored)
  command: grep "^set superusers" /boot/grub/grub.cfg
  register: boot_superusers
  when: grub_cfg_file.stat.exists == True
  changed_when: False
  failed_when: False
  always_run: True
  tags:
    - section3
    - section3.3
    - section3.3.1
    - section3.3.1.1

- name: 3.3.1.2 Set Boot Loader Superuser (Scored)
  lineinfile: >
    dest='/etc/grub.d/40_custom'
    regexp='^set superusers'
    line='set superusers="root"'
    state=present
    create=yes
  when: grub_cfg_file.stat.exists == True and boot_superusers.rc == 1
  tags:
    - section3
    - section3.3
    - section3.3.1
    - section3.3.1.2

- name: 3.3.2.1 Set Boot Loader Password (check) (Scored)
  command: grep "^password" /boot/grub/grub.cfg
  register: boot_password
  when: grub_cfg_file.stat.exists == True
  changed_when: False
  failed_when: False
  always_run: True
  tags:
    - section3
    - section3.3
    - section3.3.2
    - section3.3.2.1

- name: 3.3.2.2 Set Boot Loader Password (Scored)
  lineinfile: >
    dest='/etc/grub.d/40_custom'
    regexp='^password'
    line="password_pbkdf2 root {{ grub_pass }}"
    state=present
  when: grub_cfg_file.stat.exists == True and boot_password.rc == 1
  tags:
    - section3
    - section3.3
    - section3.3.2
    - section3.3.2.2

- name: 3.3.3 Disable password protection booting (Scored)
  lineinfile: >
    dest='/etc/grub.d/10_linux'
    create=yes
    regexp='^CLASS='
    line='CLASS="--class gnu-linux --class gnu --class os --unrestricted"'
    state=present
  tags:
    - section3
    - section3.3
    - section3.3.3

- name: 3.3.3 Disable IPV6 in grub (Scored)
  replace:
    dest='/etc/default/grub'
    regexp='^GRUB_CMDLINE_LINUX=(.*)$'
    replace='GRUB_CMDLINE_LINUX="ipv6.disable=1"'
  tags:
    - section3
    - section3.3
    - section3.3.3

- name: 3.3.4 Update Grub configuration (Scored)
  command: update-grub
  when: grub_cfg_file.stat.exists == True and (boot_superusers.rc == 1 or boot_password.rc == 1)
  tags:
    - section3
    - section3.3
    - section3.3.4
